TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 5 files
Detected 11 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: manipnet_v1/MainNN_Hand/Main_EncoderRes3Bin.py
--------------------------------------------------------------------------------
manipnet_v1/MainNN_Hand/Main_EncoderRes3Bin.py:224:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: manipnet_v1/opt/MLP_new.py
--------------------------------------------------------------------------------
manipnet_v1/opt/MLP_new.py:33:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: manipnet_v1/opt/OptBase.py
--------------------------------------------------------------------------------
manipnet_v1/opt/OptBase.py:33:11: ERROR: Using member tf.contrib.layers.batch_norm in deprecated module tf.contrib. tf.contrib.layers.batch_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
manipnet_v1/opt/OptBase.py:55:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
manipnet_v1/opt/OptBase.py:59:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
manipnet_v1/opt/OptBase.py:68:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
manipnet_v1/opt/OptBase.py:78:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
manipnet_v1/opt/OptBase.py:93:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
manipnet_v1/opt/OptBase.py:95:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
manipnet_v1/opt/OptBase.py:146:16: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
manipnet_v1/opt/OptBase.py:146:16: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'manipnet_v1'
================================================================================
--------------------------------------------------------------------------------
Processing file 'manipnet_v1/MainNN_Hand/Main_EncoderRes3Bin.py'
 outputting to 'manipnet_v2/MainNN_Hand/Main_EncoderRes3Bin.py'
--------------------------------------------------------------------------------

33:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
34:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
35:33: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
36:37: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
38:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
68:16: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
128:8: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
134:25: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
173:17: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
175:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
224:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'manipnet_v1/opt/MLP_new.py'
 outputting to 'manipnet_v2/opt/MLP_new.py'
--------------------------------------------------------------------------------

28:33: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

33:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
33:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
43:16: INFO: Changing keep_prob arg of tf.nn.dropout to rate

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'manipnet_v1/opt/OptBase.py'
 outputting to 'manipnet_v2/opt/OptBase.py'
--------------------------------------------------------------------------------

33:11: ERROR: Using member tf.contrib.layers.batch_norm in deprecated module tf.contrib. tf.contrib.layers.batch_norm cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
54:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
55:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
55:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
56:40: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
56:40: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
57:15: INFO: Added keywords to args of function 'tf.nn.conv2d'
57:15: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
59:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
59:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
59:69: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
59:69: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
66:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
68:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
68:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
69:40: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
69:40: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
78:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
78:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
78:75: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
78:75: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
92:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
93:17: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
93:17: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
94:45: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

95:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
95:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
96:43: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
96:43: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
108:11: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
134:11: INFO: Renamed 'tf.contrib.rnn.GRUCell' to 'tf.compat.v1.nn.rnn_cell.GRUCell'
143:16: INFO: Renamed 'tf.contrib.rnn.BasicLSTMCell' to 'tf.compat.v1.nn.rnn_cell.BasicLSTMCell'
146:16: WARNING: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib.rnn. (Manual edit required) tf.contrib.rnn.* has been deprecated, and widely used cells/functions will be moved to tensorflow/addons repository. Please check it there and file Github issues if necessary.
146:16: ERROR: Using member tf.contrib.rnn.DropoutWrapper in deprecated module tf.contrib. tf.contrib.rnn.DropoutWrapper cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
154:12: INFO: Changing keep_prob arg of tf.nn.dropout to rate

229:29: INFO: Renamed 'tf.div' to 'tf.compat.v1.div'
422:11: INFO: Renamed 'tf.log' to 'tf.math.log'
470:15: INFO: Renamed 'tf.mod' to 'tf.math.floormod'
915:12: INFO: Renamed 'tf.random_normal' to 'tf.random.normal'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'manipnet_v1/opt/NeuralNetwork.py'
 outputting to 'manipnet_v2/opt/NeuralNetwork.py'
--------------------------------------------------------------------------------

24:8: INFO: Renamed 'tf.set_random_seed' to 'tf.compat.v1.set_random_seed'
73:29: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
74:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
75:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
76:28: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'manipnet_v1/utils/utils.py'
 outputting to 'manipnet_v2/utils/utils.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

